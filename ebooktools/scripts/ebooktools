#!/usr/bin/env python
"""TODO
"""
import argparse
import platform
import os
import sys

import ipdb

import ebooktools
from ebooktools.utils.genutils import init_log

logger = init_log(__name__, __file__)


def parse_split_into_folders_args():
    pass


def setup_argparser():
    """Setup the argument parser for the command-line script.

    Returns
    -------
    parser : argparse.ArgumentParser
        Argument parser.

    """
    # Setup the parser
    parser = argparse.ArgumentParser(
        description='''\
This program is a Python port of ebook-tools by na-- (See
https://github.com/na--/ebook-tools).

This program can perform the following tasks:
* automatically organize folders (organize-ebooks)
* interactively and manually organize ebook files quickly (interactive-organizer)
* find valid ISBNs inside a file or in stdin (find-isbns)
* convert the supplied file to a text file (convert-to-txt)
* rename all the book files in a Calibre library folder (rename-calibre-library) 
* splits the supplied ebook files into folders (split-into-folders)

Each of these tasks is associated with a subcommand (name within
parentheses).
''',
        formatter_class=argparse.RawDescriptionHelpFormatter)
    # ===============
    # General options
    # ===============
    # TODO: package name too? instead of program name (e.g. train_models.py)
    parser.add_argument('-v', '--version', action='version',
                        version='%(prog)s v{}'.format(ebooktools.__version__))
    # TODO: add help for the following options
    parser.add_argument(
        '--loglvl', dest='logging_level', default='INFO',
        choices=['debug', 'info', 'warning', 'error'],
        help='')
    parser.add_argument(
        '--logfmt', dest='logging_formatter', default='only_msg',
        choices=['console', 'simple', 'only_msg'],
        help='')
    subparsers = parser.add_subparsers(
        title='subcommands', description=None, dest='subparser_name',
        help=None)
    # ==================
    # split-into-folders
    # ==================
    # create the parser for the "split-into-folders" command
    parser_split_into_folders = subparsers.add_parser('split-into-folders',
        help='''Splits the supplied ebook files (and the accompanying metadata 
        files if present) into folders with consecutive names that each contain 
        the specified number of files.''')
    parser_split_into_folders.set_defaults(func=parse_split_into_folders_args)
    return parser


def main():
    parser = setup_argparser()
    args = parser.parse_args()
    ipdb.set_trace()


if __name__ == '__main__':
    main()
